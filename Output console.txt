Started by user tomernos
Obtained Jenkinsfile from git https://github.com/tomernos/python-projects.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/ProjFlask
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: git
using credential 12341234
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/ProjFlask/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/tomernos/python-projects.git # timeout=10
Fetching upstream changes from https://github.com/tomernos/python-projects.git
 > git --version # timeout=10
 > git --version # 'git version 2.40.1'
using GIT_ASKPASS to set credentials credentials for git environment
 > git fetch --tags --force --progress -- https://github.com/tomernos/python-projects.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 28e51fc7e0f60c4239d1165274adf4c1385b1e91 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 28e51fc7e0f60c4239d1165274adf4c1385b1e91 # timeout=10
Commit message: "changes test"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout)
[Pipeline] script
[Pipeline] {
[Pipeline] git
The recommended git tool is: git
using credential 12341234
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/ProjFlask/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/tomernos/python-projects.git # timeout=10
Fetching upstream changes from https://github.com/tomernos/python-projects.git
 > git --version # timeout=10
 > git --version # 'git version 2.40.1'
using GIT_ASKPASS to set credentials credentials for git environment
 > git fetch --tags --force --progress -- https://github.com/tomernos/python-projects.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 28e51fc7e0f60c4239d1165274adf4c1385b1e91 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 28e51fc7e0f60c4239d1165274adf4c1385b1e91 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D main # timeout=10
 > git checkout -b main 28e51fc7e0f60c4239d1165274adf4c1385b1e91 # timeout=10
Commit message: "changes test"
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Setup)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ sudo command -v docker
[Pipeline] sh
+ sudo command -v docker-compose
[Pipeline] sh
+ sudo command -v python3
[Pipeline] sh
+ sudo command -v git
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ sudo docker-compose build
#1 [flask-app internal] load build definition from Dockerfile
#1 transferring dockerfile: 742B 0.0s done
#1 DONE 0.0s

#2 [flask-app internal] load metadata for docker.io/library/python:3.9.19-bullseye
#2 DONE 0.4s

#3 [flask-app internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [flask-app 1/6] FROM docker.io/library/python:3.9.19-bullseye@sha256:f4010aad4cc1b4fd67b36ca54fa17b10055821a8a3b3a7cd735eeaa36f76063f
#4 DONE 0.0s

#5 [flask-app internal] load build context
#5 transferring context: 826.93kB 0.0s done
#5 DONE 0.0s

#6 [flask-app 4/6] RUN apt-get update && apt-get install -y python3
#6 CACHED

#7 [flask-app 2/6] WORKDIR /app
#7 CACHED

#8 [flask-app 3/6] COPY requirements.txt requirements.txt
#8 CACHED

#9 [flask-app 5/6] RUN pip install -r requirements.txt
#9 CACHED

#10 [flask-app 6/6] COPY . .
#10 DONE 0.2s

#11 [flask-app] exporting to image
#11 exporting layers 0.1s done
#11 writing image sha256:4d2872f7913b5b0ccfe3f43e000a031fa43ca1a9a3a09d664b4df61684801829 done
#11 naming to docker.io/library/projflask-flask-app done
#11 DONE 0.1s

#12 [test internal] load build definition from Dockerfile
#12 transferring dockerfile: 742B done
#12 DONE 0.0s

#2 [test internal] load metadata for docker.io/library/python:3.9.19-bullseye
#2 DONE 0.5s

#13 [test internal] load .dockerignore
#13 transferring context: 2B done
#13 DONE 0.0s

#4 [test 1/6] FROM docker.io/library/python:3.9.19-bullseye@sha256:f4010aad4cc1b4fd67b36ca54fa17b10055821a8a3b3a7cd735eeaa36f76063f
#4 DONE 0.0s

#14 [test internal] load build context
#14 transferring context: 9.09kB 0.0s done
#14 DONE 0.0s

#7 [test 2/6] WORKDIR /app
#7 CACHED

#15 [test 3/6] COPY requirements.txt requirements.txt
#15 CACHED

#16 [test 5/6] RUN pip install -r requirements.txt
#16 CACHED

#17 [test 4/6] RUN apt-get update && apt-get install -y python3
#17 CACHED

#18 [test 6/6] COPY . .
#18 CACHED

#19 [test] exporting to image
#19 exporting layers done
#19 writing image sha256:3945f2a89920a0707b7741cd9f7e80a30c997858a981ef7008819acd9ae25c76 done
#19 naming to docker.io/library/projflask-test done
#19 DONE 0.0s
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Check Environment)
[Pipeline] sh
++ whoami
+ echo 'User: jenkins'
User: jenkins
+ echo 'Python Version:'
Python Version:
+ python3 --version
Python 3.9.16
+ echo 'Python Path:'
Python Path:
+ which python3
/usr/bin/python3
+ echo 'Pip List:'
Pip List:
+ pip list
Package              Version
-------------------- --------
attrs                20.3.0
aws-cfn-bootstrap    2.0
awscli               2.15.30
awscrt               0.19.19
Babel                2.9.1
blinker              1.8.2
certifi              2024.7.4
cffi                 1.14.5
chardet              4.0.0
charset-normalizer   3.3.2
chevron              0.13.1
click                8.1.7
cloud-init           22.2.2
colorama             0.4.4
configobj            5.0.6
cryptography         36.0.1
dbus-python          1.2.18
distro               1.5.0
docker               7.1.0
docutils             0.16
ec2-hibinit-agent    1.0.8
exceptiongroup       1.2.2
Flask                3.0.3
gpg                  1.15.1
idna                 3.7
importlib_metadata   8.4.0
iniconfig            2.0.0
itsdangerous         2.2.0
Jinja2               3.1.4
jmespath             0.10.0
jsonpatch            1.21
jsonpointer          2.0
jsonschema           3.2.0
libcomps             0.1.20
lockfile             0.12.2
MarkupSafe           2.1.5
netifaces            0.10.6
oauthlib             3.0.2
packaging            24.1
pip                  24.2
pluggy               1.5.0
ply                  3.11
prettytable          0.7.2
prompt-toolkit       3.0.24
pycparser            2.20
pyrsistent           0.17.3
pyserial             3.4
PySocks              1.7.1
pytest               8.3.2
python-daemon        2.3.0
python-dateutil      2.8.1
pytz                 2022.7.1
PyYAML               5.4.1
release-notification 1.2
requests             2.32.3
rpm                  4.16.1.3
ruamel.yaml          0.16.6
ruamel.yaml.clib     0.1.2
selinux              3.4
sepolicy             3.4
setools              4.4.1
setuptools           59.6.0
six                  1.15.0
support-info         1.0
systemd-python       235
tomli                2.0.1
urllib3              2.2.2
wcwidth              0.2.5
Werkzeug             3.0.3
zipp                 3.20.0
+ echo 'Environment Variables:'
Environment Variables:
+ env
SHELL=/bin/bash
RUN_TESTS_DISPLAY_URL=http://54.237.56.251:8080/job/ProjFlask/47/display/redirect?page=tests
JENKINS_SERVER_COOKIE=durable-b62f9497af3adcfac6d35a4f22b267ba4d179f9658de55f23542788771a70e5b
RUN_CHANGES_DISPLAY_URL=http://54.237.56.251:8080/job/ProjFlask/47/display/redirect?page=changes
HUDSON_HOME=/var/lib/jenkins
PWD=/var/lib/jenkins/workspace/ProjFlask
LOGNAME=jenkins
BUILD_URL=http://54.237.56.251:8080/job/ProjFlask/47/
JOB_URL=http://54.237.56.251:8080/job/ProjFlask/
BUILD_NUMBER=47
SYSTEMD_EXEC_PID=7638
JENKINS_NODE_COOKIE=0129246f-ccb1-4fe6-ba91-3a4ca213513c
BUILD_DISPLAY_NAME=#47
HOME=/var/lib/jenkins
LANG=C.UTF-8
JENKINS_URL=http://54.237.56.251:8080/
JOB_BASE_NAME=ProjFlask
JOB_NAME=ProjFlask
INVOCATION_ID=9e852946ff184fb2b19ce4ea7bf7457a
RUN_DISPLAY_URL=http://54.237.56.251:8080/job/ProjFlask/47/display/redirect
JOB_DISPLAY_URL=http://54.237.56.251:8080/job/ProjFlask/display/redirect
WORKSPACE=/var/lib/jenkins/workspace/ProjFlask
GIT_CREDENTIALS=12341234
HUDSON_URL=http://54.237.56.251:8080/
NODE_NAME=built-in
USER=jenkins
HUDSON_SERVER_COOKIE=50d9d0f108d4ad28
NOTIFY_SOCKET=/run/systemd/notify
GIT_URL=https://github.com/tomernos/python-projects.git
SHLVL=2
BUILD_TAG=jenkins-ProjFlask-47
EXECUTOR_NUMBER=1
HUDSON_COOKIE=c97d93f7-bc87-46c9-8837-1df4cddeb8e8
JENKINS_HOME=/var/lib/jenkins
GIT_COMMIT=28e51fc7e0f60c4239d1165274adf4c1385b1e91
NODE_LABELS=built-in
STAGE_NAME=Check Environment
JOURNAL_STREAM=8:36618
WORKSPACE_TMP=/var/lib/jenkins/workspace/ProjFlask@tmp
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
CI=true
RUN_ARTIFACTS_DISPLAY_URL=http://54.237.56.251:8080/job/ProjFlask/47/display/redirect?page=artifacts
GIT_BRANCH=origin/main
BUILD_ID=47
_=/usr/bin/env
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Run Tests)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ python3 -m venv venv
+ . venv/bin/activate
++ deactivate nondestructive
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n /usr/bin/sh -o -n '' ']'
++ hash -r
++ '[' -n '' ']'
++ unset VIRTUAL_ENV
++ '[' '!' nondestructive = nondestructive ']'
++ VIRTUAL_ENV=/var/lib/jenkins/workspace/ProjFlask/venv
++ export VIRTUAL_ENV
++ _OLD_VIRTUAL_PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
++ PATH=/var/lib/jenkins/workspace/ProjFlask/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
++ export PATH
++ '[' -n '' ']'
++ '[' -z '' ']'
++ _OLD_VIRTUAL_PS1=
++ PS1='(venv) '
++ export PS1
++ '[' -n /usr/bin/sh -o -n '' ']'
++ hash -r
+ echo directory:
directory:
+ python3 --version
Python 3.9.16
+ ./venv/bin/pip3 install --upgrade pip
Requirement already satisfied: pip in ./venv/lib/python3.9/site-packages (21.3.1)
Collecting pip
  Using cached pip-24.2-py3-none-any.whl (1.8 MB)
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 21.3.1
    Uninstalling pip-21.3.1:
      Successfully uninstalled pip-21.3.1
Successfully installed pip-24.2
+ ./venv/bin/pip3 install -r requirements.txt
Collecting blinker==1.8.2 (from -r requirements.txt (line 1))
  Downloading blinker-1.8.2-py3-none-any.whl.metadata (1.6 kB)
Collecting click==8.1.7 (from -r requirements.txt (line 2))
  Downloading click-8.1.7-py3-none-any.whl.metadata (3.0 kB)
Collecting exceptiongroup==1.2.2 (from -r requirements.txt (line 3))
  Downloading exceptiongroup-1.2.2-py3-none-any.whl.metadata (6.6 kB)
Collecting Flask==3.0.3 (from -r requirements.txt (line 4))
  Downloading flask-3.0.3-py3-none-any.whl.metadata (3.2 kB)
Collecting iniconfig==2.0.0 (from -r requirements.txt (line 5))
  Downloading iniconfig-2.0.0-py3-none-any.whl.metadata (2.6 kB)
Collecting itsdangerous==2.2.0 (from -r requirements.txt (line 6))
  Downloading itsdangerous-2.2.0-py3-none-any.whl.metadata (1.9 kB)
Collecting Jinja2==3.1.4 (from -r requirements.txt (line 7))
  Downloading jinja2-3.1.4-py3-none-any.whl.metadata (2.6 kB)
Collecting MarkupSafe==2.1.5 (from -r requirements.txt (line 8))
  Downloading MarkupSafe-2.1.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.0 kB)
Collecting packaging==24.1 (from -r requirements.txt (line 9))
  Downloading packaging-24.1-py3-none-any.whl.metadata (3.2 kB)
Collecting pluggy==1.5.0 (from -r requirements.txt (line 10))
  Downloading pluggy-1.5.0-py3-none-any.whl.metadata (4.8 kB)
Collecting pytest==8.3.2 (from -r requirements.txt (line 11))
  Downloading pytest-8.3.2-py3-none-any.whl.metadata (7.5 kB)
Collecting tomli==2.0.1 (from -r requirements.txt (line 12))
  Downloading tomli-2.0.1-py3-none-any.whl.metadata (8.9 kB)
Collecting Werkzeug==3.0.3 (from -r requirements.txt (line 13))
  Downloading werkzeug-3.0.3-py3-none-any.whl.metadata (3.7 kB)
Collecting importlib-metadata>=3.6.0 (from Flask==3.0.3->-r requirements.txt (line 4))
  Downloading importlib_metadata-8.4.0-py3-none-any.whl.metadata (4.7 kB)
Collecting zipp>=0.5 (from importlib-metadata>=3.6.0->Flask==3.0.3->-r requirements.txt (line 4))
  Downloading zipp-3.20.0-py3-none-any.whl.metadata (3.6 kB)
Downloading blinker-1.8.2-py3-none-any.whl (9.5 kB)
Downloading click-8.1.7-py3-none-any.whl (97 kB)
Downloading exceptiongroup-1.2.2-py3-none-any.whl (16 kB)
Downloading flask-3.0.3-py3-none-any.whl (101 kB)
Downloading iniconfig-2.0.0-py3-none-any.whl (5.9 kB)
Downloading itsdangerous-2.2.0-py3-none-any.whl (16 kB)
Downloading jinja2-3.1.4-py3-none-any.whl (133 kB)
Downloading MarkupSafe-2.1.5-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (25 kB)
Downloading packaging-24.1-py3-none-any.whl (53 kB)
Downloading pluggy-1.5.0-py3-none-any.whl (20 kB)
Downloading pytest-8.3.2-py3-none-any.whl (341 kB)
Downloading tomli-2.0.1-py3-none-any.whl (12 kB)
Downloading werkzeug-3.0.3-py3-none-any.whl (227 kB)
Downloading importlib_metadata-8.4.0-py3-none-any.whl (26 kB)
Downloading zipp-3.20.0-py3-none-any.whl (9.4 kB)
Installing collected packages: zipp, tomli, pluggy, packaging, MarkupSafe, itsdangerous, iniconfig, exceptiongroup, click, blinker, Werkzeug, pytest, Jinja2, importlib-metadata, Flask
Successfully installed Flask-3.0.3 Jinja2-3.1.4 MarkupSafe-2.1.5 Werkzeug-3.0.3 blinker-1.8.2 click-8.1.7 exceptiongroup-1.2.2 importlib-metadata-8.4.0 iniconfig-2.0.0 itsdangerous-2.2.0 packaging-24.1 pluggy-1.5.0 pytest-8.3.2 tomli-2.0.1 zipp-3.20.0
+ echo 'Python version:'
Python version:
+ ./venv/bin/python3 --version
Python 3.9.16
+ echo 'Pip version:'
Pip version:
+ ./venv/bin/pip3 --version
pip 24.2 from /var/lib/jenkins/workspace/ProjFlask/venv/lib64/python3.9/site-packages/pip (python 3.9)
+ echo 'Installed packages:'
Installed packages:
+ pip3 list
Package            Version
------------------ -------
blinker            1.8.2
click              8.1.7
exceptiongroup     1.2.2
Flask              3.0.3
importlib_metadata 8.4.0
iniconfig          2.0.0
itsdangerous       2.2.0
Jinja2             3.1.4
MarkupSafe         2.1.5
packaging          24.1
pip                24.2
pluggy             1.5.0
pytest             8.3.2
setuptools         59.6.0
tomli              2.0.1
Werkzeug           3.0.3
zipp               3.20.0
+ ./venv/bin/python3 test_myflask.py
...
----------------------------------------------------------------------
Ran 3 tests in 0.025s

OK
+ deactivate
+ '[' -n /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin ']'
+ PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
+ export PATH
+ unset _OLD_VIRTUAL_PATH
+ '[' -n '' ']'
+ '[' -n /usr/bin/sh -o -n '' ']'
+ hash -r
+ '[' -n '' ']'
+ unset VIRTUAL_ENV
+ '[' '!' '' = nondestructive ']'
+ unset -f deactivate
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ sudo docker-compose up -d
 db Pulling 
 db Error 
Error response from daemon: pull access denied for sqlite3, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] sh
+ sudo docker-compose down
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 18
Finished: FAILURE