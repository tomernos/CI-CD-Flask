Started by GitHub push by tomernos
Obtained Jenkinsfile from git https://github.com/tomernos/python-projects.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/ProjFlask
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: git
using credential 12341234
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/ProjFlask/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/tomernos/python-projects.git # timeout=10
Fetching upstream changes from https://github.com/tomernos/python-projects.git
 > git --version # timeout=10
 > git --version # 'git version 2.40.1'
using GIT_ASKPASS to set credentials credentials for git environment
 > git fetch --tags --force --progress -- https://github.com/tomernos/python-projects.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 38b4a8be82122e8dcefe452242d582938fc4c493 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 38b4a8be82122e8dcefe452242d582938fc4c493 # timeout=10
Commit message: "remove file"
 > git rev-list --no-walk a9ef611106f5d8ada277dd1e9fc567b6178ee884 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Checkout)
[Pipeline] script
[Pipeline] {
[Pipeline] git
The recommended git tool is: git
using credential 12341234
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/ProjFlask/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/tomernos/python-projects.git # timeout=10
Fetching upstream changes from https://github.com/tomernos/python-projects.git
 > git --version # timeout=10
 > git --version # 'git version 2.40.1'
using GIT_ASKPASS to set credentials credentials for git environment
 > git fetch --tags --force --progress -- https://github.com/tomernos/python-projects.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
Checking out Revision 38b4a8be82122e8dcefe452242d582938fc4c493 (refs/remotes/origin/main)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 38b4a8be82122e8dcefe452242d582938fc4c493 # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D main # timeout=10
 > git checkout -b main 38b4a8be82122e8dcefe452242d582938fc4c493 # timeout=10
Commit message: "remove file"
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Setup)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ sudo command -v docker
[Pipeline] sh
+ sudo command -v docker-compose
[Pipeline] sh
+ sudo command -v python3
[Pipeline] sh
+ sudo command -v git
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ sudo docker-compose build
#1 [flask-app internal] load build definition from Dockerfile
#1 transferring dockerfile: 753B 0.0s done
#1 DONE 0.1s

#2 [flask-app internal] load metadata for docker.io/library/python:3.9.19-bullseye
#2 DONE 0.2s

#3 [flask-app internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [flask-app 1/6] FROM docker.io/library/python:3.9.19-bullseye@sha256:f4010aad4cc1b4fd67b36ca54fa17b10055821a8a3b3a7cd735eeaa36f76063f
#4 DONE 0.0s

#5 [flask-app internal] load build context
#5 transferring context: 894.49kB 0.6s done
#5 DONE 0.6s

#6 [flask-app 4/6] RUN apt-get update && apt-get install -y python3
#6 CACHED

#7 [flask-app 2/6] WORKDIR /python-docker
#7 CACHED

#8 [flask-app 3/6] COPY requirements.txt requirements.txt
#8 CACHED

#9 [flask-app 5/6] RUN pip3 install -r requirements.txt
#9 CACHED

#10 [flask-app 6/6] COPY . .
#10 DONE 2.4s

#11 [flask-app] exporting to image
#11 exporting layers
#11 exporting layers 0.4s done
#11 writing image sha256:5fbb59a520adb12a4797882534ee3a5223a3d86b534fdc6e022df39a7ad938cd
#11 writing image sha256:5fbb59a520adb12a4797882534ee3a5223a3d86b534fdc6e022df39a7ad938cd done
#11 naming to docker.io/library/projflask-flask-app 0.0s done
#11 DONE 0.5s

#12 [test internal] load build definition from Dockerfile
#12 transferring dockerfile: 753B 0.0s done
#12 DONE 0.0s

#2 [test internal] load metadata for docker.io/library/python:3.9.19-bullseye
#2 DONE 0.3s

#13 [test internal] load .dockerignore
#13 transferring context: 2B done
#13 DONE 0.0s

#4 [test 1/6] FROM docker.io/library/python:3.9.19-bullseye@sha256:f4010aad4cc1b4fd67b36ca54fa17b10055821a8a3b3a7cd735eeaa36f76063f
#4 DONE 0.0s

#14 [test internal] load build context
#14 transferring context: 207.87kB 0.1s done
#14 DONE 0.1s

#15 [test 4/6] RUN apt-get update && apt-get install -y python3
#15 CACHED

#16 [test 5/6] RUN pip3 install -r requirements.txt
#16 CACHED

#7 [test 2/6] WORKDIR /python-docker
#7 CACHED

#17 [test 3/6] COPY requirements.txt requirements.txt
#17 CACHED

#18 [test 6/6] COPY . .
#18 CACHED

#19 [test] exporting to image
#19 exporting layers done
#19 writing image sha256:676bbf03dc47feb3e17817c4e28b085fdc2907228b3e5df35d82aa17ae7344e0 done
#19 naming to docker.io/library/projflask-test done
#19 DONE 0.0s
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Run Tests)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ python3 -m venv venv
+ source venv/bin/activate
++ deactivate nondestructive
++ '[' -n '' ']'
++ '[' -n '' ']'
++ '[' -n /usr/bin/sh -o -n '' ']'
++ hash -r
++ '[' -n '' ']'
++ unset VIRTUAL_ENV
++ '[' '!' nondestructive = nondestructive ']'
++ VIRTUAL_ENV=/var/lib/jenkins/workspace/ProjFlask/venv
++ export VIRTUAL_ENV
++ _OLD_VIRTUAL_PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
++ PATH=/var/lib/jenkins/workspace/ProjFlask/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
++ export PATH
++ '[' -n '' ']'
++ '[' -z '' ']'
++ _OLD_VIRTUAL_PS1=
++ PS1='(venv) '
++ export PS1
++ '[' -n /usr/bin/sh -o -n '' ']'
++ hash -r
+ pip install -r requirements.txt
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: blinker==1.8.2 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from -r requirements.txt (line 1)) (1.8.2)
Requirement already satisfied: click==8.1.7 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from -r requirements.txt (line 2)) (8.1.7)
Requirement already satisfied: Flask==3.0.3 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from -r requirements.txt (line 3)) (3.0.3)
Requirement already satisfied: itsdangerous==2.2.0 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from -r requirements.txt (line 4)) (2.2.0)
Requirement already satisfied: Jinja2==3.1.4 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from -r requirements.txt (line 5)) (3.1.4)
Requirement already satisfied: MarkupSafe==2.1.5 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from -r requirements.txt (line 6)) (2.1.5)
Requirement already satisfied: Werkzeug==3.0.3 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from -r requirements.txt (line 7)) (3.0.3)
Requirement already satisfied: importlib-metadata>=3.6.0 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from Flask==3.0.3->-r requirements.txt (line 3)) (8.4.0)
Requirement already satisfied: zipp>=0.5 in /var/lib/jenkins/.local/lib/python3.9/site-packages (from importlib-metadata>=3.6.0->Flask==3.0.3->-r requirements.txt (line 3)) (3.20.0)
+ python3 test_myflask.py
Traceback (most recent call last):
  File "/var/lib/jenkins/workspace/ProjFlask/test_myflask.py", line 2, in <module>
    from my_flask import app, create_table, create_chat_table
  File "/var/lib/jenkins/workspace/ProjFlask/my_flask.py", line 3, in <module>
    from flask import *
ModuleNotFoundError: No module named 'flask'
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
Stage "Deploy" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] sh
+ sudo docker-compose down
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code 1
Finished: FAILURE